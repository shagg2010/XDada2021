spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

application.name=SpringBootRestApp
application.version=1.0.0

kafka.bootstrap.address=kafka1:9092,kafka2:9094,kafka3:9096
kafka.bootstrap.group1.id=group_id
kafka.bootstrap.topic1.name=topic1

kafka.bootstrap.group2.id=group_json
kafka.bootstrap.topic2.name=topicObject

###### configuration properties ######
        ### database related ####
#local JDBC URL = jdbc:postgresql://localhost:5433/xpress
#Docker JDBC URL = jdbc:postgresql://xpressdb:5432/xpress
application.database.url=jdbc:postgresql://xpressdb:5432/xpress
application.database.user=yadas
application.database.password=yadas
application.database.driver=org.postgresql.Driver

file.upload-directory=/usr/src/app/resources
file.download-directory=/usr/src/app/resources

##### Cassandra Config #####
application.cassandra.keyspace=store
application.cassandra.contact-point=cassandra
application.cassandra.datacenter=datacenter1
##### Cassandra Config - Just for configuration purposes while running test cases during build #####
spring.data.cassandra.keyspace-name=store
spring.data.cassandra.contact-points=cassandra
spring.data.cassandra.port=9042
spring.data.cassandra.local-datacenter=datacenter1

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

########### To enable HTTPS ###########
# Set JAVA_HOME and run the following command to generate keystore.p12
### keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650

#server.port: 443
#server.ssl.key-store: keystore.p12
#server.ssl.key-store-password: yadas10
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat